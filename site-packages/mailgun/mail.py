__all__ = ['MailGun']

from typing import Dict

from .fake_api import FakeApi
from .mailgun_api import MailGunAPI


class MailGun():
    def __init__(self):
        self.app = None
        self.api = None
        self._send_fun = None

    def init_app(self, app) -> None:
        self.app = app
        config = app.config.get_namespace('MAILGUN_')

        if not config.get('mute', False):
            self.api = MailGunAPI(config)
        else:
            self.api = FakeApi(config)

        if not hasattr(app, 'extensions'):
            app.extensions = {}
        app.extensions['mail'] = self

    def send(self, subject: str, to: str, template: str, values: Dict[str, str]):
        self.api.send(subject, to, template, values)

    def check_adr(self, address: str):
        result = self.api.check_adr(address)
        result.pop('address')
        deliverable = result.pop('result')
        if deliverable == 'deliverable':
            result['deliverable'] = True
        elif deliverable == 'undeliverable':
            result['deliverable'] = False
        else:
            result['deliverable'] = None
        return result
